- make `ulrlocals` work with multithreading
	- do this by making a vector of `ulrlocals` arrs for each thread
	- when threads are created they will add their ulrlocals to the vector
	- impl the GC side logic for this (gc also needs to be able to look through threads)
- add arg passing in MethodInvoke where the first four args are also placed on the stack (find if this is required first)
- finish ConstructorInfo::Invoke method (should just be like methodinfo but with self as first arg and returning nothing)
- add methodinvoke for non win64 systems
- change some reinterpret casts in stdlib to normal casts
- add runtime member reordering for runtime inheritance once dynamic type generation is allowed (field reordering)
- dynamic generic type generation
- prebuilt generic type loading
- array type deps loading from metadata ^
- have loader support all valid modifiers for different attributes
- add static ctor support - marked as will not add - decided that compilers should manage static ctors themselves
- remove switch case blocks in Loader that are always true or false
- allow assemblies to specify deps & look for circular deps
- allow ULRAPI to create array type objects (just move the loader logic to ULRAPI & have loader delegate to it)